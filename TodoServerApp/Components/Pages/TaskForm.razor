@page "/tasks/add"
@page "/tasks/{Id:int}"

@inject IDataService data
@inject NavigationManager navigate

<EditForm Model="TaskItem" FormName="TaskForm" OnValidSubmit="ValidSubmit">
    <DataAnnotationsValidator/>
    <InputNumber @bind-Value ="TaskItem.Id" hidden/>
    <div class="form-group d-flex justify-content-between m-2">
        <label class="col-form-label col-3">Заголовок</label>
        <InputText @bind-Value="TaskItem.Title" Class="form-control"/>
        <ValidationMessage For="() => TaskItem.Title"/>
    </div>
    <div class="form-group d-flex justify-content-between m-2">
        <label class="col-form-label col-3">Описание</label>
        <InputText @bind-Value="TaskItem.Description" Class="form-control"/>
        <ValidationMessage For="() => TaskItem.Description"/>
    </div>
        <div class="form-group d-flex justify-content-between m-2">
        <label class="col-form-label col-3">Дата окончания</label>
        <InputDate @bind-Value="TaskItem.FinishDate" Class="form-control"/>
        <ValidationMessage For="() => TaskItem.FinishDate"/>
    </div>
    <div class="btn-group">
        <button class="btn btn-primary m-2" type="submit">Сохранить</button>
        <a class="btn btn-primary m-2" href="/">Отмена</a>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    TaskItem TaskItem { get; set; } = new();

    async Task ValidSubmit()
    {
        await data.SaveAsync(TaskItem!);
        navigate.NavigateTo("/");
    }
}

